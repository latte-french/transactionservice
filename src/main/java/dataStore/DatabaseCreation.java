package dataStore;

import dataStore.utils.StatementExecution;
import model.StatementModel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.sql.SQLException;

public class DatabaseCreation {

    private static final Logger LOGGER = LoggerFactory.getLogger(DatabaseCreation.class);
    private static String statementMessage;
    private static StatementModel statementModel;

    public static void initDatabase(){

        createUserTable();
        createAccountTable();
        createUserAccountTable();
        createTransferTable();

    }


    public static void createUserTable() {
        try {
            statementMessage = "CREATE TABLE IF NOT EXISTS " +
                    "users (id BIGINT NOT NULL, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL,"+
                    " PRIMARY KEY (id))";
            statementModel = new StatementModel(statementMessage);
            StatementExecution.prepareAndExecuteStatement(statementModel);
        }
        catch (SQLException e){
            LOGGER.error("Couldn't create the users table in database");
        }
     }

    public static void createAccountTable() {
        try {
            statementMessage = "CREATE TABLE IF NOT EXISTS accounts" +
                    " (id BIGINT NOT NULL, balance DOUBLE NOT NULL, currency VARCHAR(3) NOT NULL," +
                    " PRIMARY KEY (id))";
            statementModel = new StatementModel(statementMessage);
            StatementExecution.prepareAndExecuteStatement(statementModel);
        }
        catch (SQLException e){
            LOGGER.error("Couldn't create the accounts table in database");
        }
    }

    public static void createUserAccountTable() {
        try {
            statementMessage ="CREATE TABLE IF NOT EXISTS user_accounts" +
                    " (id BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY," +
                    " user_id BIGINT NOT NULL, account_id BIGINT NOT NULL)";
            statementModel = new StatementModel(statementMessage);
            StatementExecution.prepareAndExecuteStatement(statementModel);
        }
        catch (SQLException e){
                LOGGER.error("Couldn't create the user_accounts table in database");
        }
     }

    public static void createTransferTable(){
        try {
            statementMessage = "CREATE TABLE IF NOT EXISTS transfers" +
                    " (id BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY," +
                    " account_from BIGINT NOT NULL, sum_from DOUBLE NOT NULL, currency_from VARCHAR(3) NOT NULL," +
                    "account_to BIGINT NOT NULL, sum_to DOUBLE NOT NULL, currency_to VARCHAR(3) NOT NULL," +
                    "transferred_at TIMESTAMP)";

            statementModel = new StatementModel(statementMessage);
            StatementExecution.prepareAndExecuteStatement(statementModel);
        }
        catch (SQLException e){
            LOGGER.error("Couldn't create the transfers table in database");
        }
    }
}
